{"version":3,"sources":["Api.js","Pin.js","LogEntryForm.js","App.js","index.js"],"names":["API_URL","listLogEntries","a","fetch","headers","Accept","response","json","createLogEntry","entry","method","body","JSON","stringify","Pin","props","onClick","className","version","id","x","y","viewBox","d","LogEntryForm","location","onClose","useState","loading","setLoading","error","setError","useForm","register","handleSubmit","onSubmit","data","latitude","longitude","created","console","log","message","htmlFor","name","required","ref","rows","type","disabled","App","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","width","height","zoom","viewport","setViewport","getEntries","useEffect","mapStyle","mapboxApiAccessToken","process","onViewportChange","nextViewport","onDblClick","event","lngLat","doubleClickZoom","map","_id","closeButton","closeOnClick","anchor","title","comments","image","src","alt","Date","visitDate","toLocaleDateString","dynamicPosition","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8fa9a04.chunk.js","sourcesContent":["const API_URL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://korhan-travel-log.herokuapp.com:1337\"\r\n    : \"http://localhost:1337\";\r\n\r\nexport async function listLogEntries() {\r\n  const response = await fetch(`${API_URL}/api/logs`, {\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  });\r\n  return response.json();\r\n}\r\n\r\nexport async function createLogEntry(entry) {\r\n  const response = await fetch(`${API_URL}/api/logs`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(entry),\r\n  });\r\n  return response.json();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Pin = (props) => {\r\n  return (\r\n    <div onClick={props.onClick ? props.onClick : null}>\r\n      <svg\r\n        className={props.className}\r\n        version=\"1.1\"\r\n        id=\"Layer_1\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <g>\r\n          <g>\r\n            <path\r\n              d=\"M256,0C161.896,0,85.333,76.563,85.333,170.667c0,28.25,7.063,56.26,20.49,81.104L246.667,506.5\r\n                      c1.875,3.396,5.448,5.5,9.333,5.5s7.458-2.104,9.333-5.5l140.896-254.813c13.375-24.76,20.438-52.771,20.438-81.021\r\n                      C426.667,76.563,350.104,0,256,0z M256,256c-47.052,0-85.333-38.281-85.333-85.333c0-47.052,38.281-85.333,85.333-85.333\r\n                      s85.333,38.281,85.333,85.333C341.333,217.719,303.052,256,256,256z\"\r\n            />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pin;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createLogEntry } from \"./Api\";\r\n\r\nconst LogEntryForm = ({ location, onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  // this will give us access to the data from the form\r\n  const onSubmit = async (data) => {\r\n    //for now just log the data\r\n    //console.log(data);\r\n    try {\r\n      setLoading(true);\r\n      data.latitude = location.latitude;\r\n      data.longitude = location.longitude;\r\n      const created = createLogEntry(data);\r\n      console.log(created);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"entry-form\">\r\n      {error ? <h3 className=\"error\">{error}</h3> : null}\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input name=\"title\" required ref={register} />\r\n      <label htmlFor=\"comments\">Comment:</label>\r\n      <textarea name=\"comments\" rows={3} ref={register}></textarea>\r\n      <label htmlFor=\"description\">Description:</label>\r\n      <textarea name=\"description\" rows={3} ref={register}></textarea>\r\n      <label htmlFor=\"image\">Image:</label>\r\n      <input name=\"image\" ref={register} />\r\n      <label htmlFor=\"visitDate\">Visit Date:</label>\r\n      <input name=\"visitDate\" type=\"date\" required ref={register} />\r\n      <button disabled={loading}>\r\n        {loading ? \"Loading...\" : \"Create Log Entry\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LogEntryForm;\r\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport { listLogEntries } from \"./Api\";\nimport \"./index.css\";\nimport Pin from \"./Pin\";\nimport LogEntryForm from \"./LogEntryForm\";\n\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n  const [viewport, setViewport] = useState({\n    width: \"100%\",\n    height: \"100vh\",\n    latitude: 37.6,\n    longitude: -95.665,\n    zoom: 3,\n  });\n\n  const getEntries = async () => {\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries); // we have assigned logEntries into our state variable.\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showAddMarkerPopup = (event) => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude,\n    });\n  };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle=\"mapbox://styles/mapbox/dark-v8\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\n      onDblClick={showAddMarkerPopup}\n      doubleClickZoom={false}\n    >\n      {logEntries.map((entry) => (\n        <React.Fragment key={entry._id}>\n          {/* we will use a marker component (react-map-gl) */}\n          <Marker latitude={entry.latitude} longitude={entry.longitude}>\n            <Pin\n              className=\"marker yellow\"\n              onClick={() =>\n                setShowPopup({\n                  // ...showPopup,\n                  [entry._id]: true,\n                })\n              }\n            />\n          </Marker>\n          {showPopup[entry._id] ? (\n            <Popup\n              latitude={entry.latitude}\n              longitude={entry.longitude}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={() => setShowPopup({})} // we will only have one popup open at a time, which would be a better experience.\n              anchor=\"top\"\n            >\n              <div className=\"popup\">\n                <h3>{entry.title}</h3>\n                <p>{entry.comments}</p>\n                {entry.image ? (\n                  <img\n                    className=\"popup-img\"\n                    src={entry.image}\n                    alt={entry.title}\n                  />\n                ) : null}\n                <p>\n                  <small>\n                    Visited on {new Date(entry.visitDate).toLocaleDateString()}\n                  </small>\n                </p>\n              </div>\n            </Popup>\n          ) : null}\n        </React.Fragment>\n      ))}\n      {addEntryLocation ? (\n        <>\n          <Marker\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n          >\n            <Pin className=\"marker red\" />\n          </Marker>\n          <Popup\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n            closeButton={true}\n            closeOnClick={false}\n            dynamicPosition={true}\n            onClose={() => setAddEntryLocation(null)}\n            anchor=\"top\"\n          >\n            <div className=\"popup\">\n              <h3>Add your new log entry here</h3>\n              <LogEntryForm\n                onClose={() => {\n                  setAddEntryLocation(null);\n                  getEntries();\n                }}\n                location={addEntryLocation}\n              />\n            </div>\n          </Popup>\n        </>\n      ) : null}\n    </ReactMapGL>\n  ); //return\n}; //app\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}